{"version":3,"sources":["../backbone.vdomview.js"],"names":[],"mappings":"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","file":"backbone.vdomview.js","sourcesContent":["/*!\n * Backbone.VDOMView\n *\n * MIT Licensed. Copyright (c) 2017, JC Brand <jc@opkode.com>\n */\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define([\n            \"snabbdom\",\n            \"snabbdom-attributes\",\n            \"snabbdom-class\",\n            \"snabbdom-dataset\",\n            \"snabbdom-props\",\n            \"snabbdom-style\",\n            \"tovnode\",\n            \"underscore\",\n            \"backbone\"\n        ], factory);\n    } else if (typeof module === 'object' && module.exports) {\n        // CommonJS-like environments\n        module.exports = factory(\n            require('snabbdom'),\n            require('snabbdom-attributes'),\n            require('snabbdom-class'),\n            require('snabbdom-dataset'),\n            require('snabbdom-props'),\n            require('snabbdom-style'),\n            require('tovnode'),\n            require('underscore'),\n            require('backbone')\n        );\n   }\n}(this, function (\n        snabbdom,\n        snabbdom_attributes,\n        snabbdom_class,\n        snabbdom_dataset,\n        snabbdom_props,\n        snabbdom_style,\n        tovnode,\n        _,\n        Backbone) {\n    \"use strict\";\n\n    let domParser = new DOMParser();\n    const patch = snabbdom.init([\n        snabbdom_attributes.default,\n        snabbdom_class.default,\n        snabbdom_dataset.default,\n        snabbdom_props.default,\n        snabbdom_style.default\n    ]);\n\n    const View = _.isUndefined(Backbone.NativeView) ? Backbone.View : Backbone.NativeView;\n\n    function parseHTMLToDOM (html_str) {\n        /* Parses a string with HTML and returns a DOM element.\n         *\n         * Forked from vdom_parser:\n         *      https://github.com/bitinn/vdom-parser\n         */\n        if (typeof html_str !== 'string') {\n            throw new Error('Invalid parameter type in parseHTMLToDOM');\n        }\n        if ( !('DOMParser' in window) ) {\n            throw new Error(\n                'DOMParser is not available, '+\n                'so parsing string to DOM node is not possible.');\n        }\n        if (!html_str) {\n            return document.createTextNode('');\n        }\n        domParser = domParser || new DOMParser();\n        const doc = domParser.parseFromString(html_str, 'text/html');\n\n        // most tags default to body\n        if (doc.body.firstChild) {\n            return doc.getElementsByTagName('body')[0].firstChild;\n\n        // some tags, like script and style, default to head\n        } else if (doc.head.firstChild && (doc.head.firstChild.tagName !== 'TITLE' || doc.title)) {\n            return doc.head.firstChild;\n\n        // special case for html comment, cdata, doctype\n        } else if (doc.firstChild && doc.firstChild.tagName !== 'HTML') {\n            return doc.firstChild;\n\n        // other element, such as whitespace, or html/body/head tag, fallback to empty text node\n        } else {\n            return document.createTextNode('');\n        }\n    }\n\n    Backbone.VDOMView = View.extend({\n\n        updateEventListeners (old_vnode, new_vnode) {\n            this.setElement(new_vnode.elm);\n        },\n\n        render () {\n            if (_.isFunction(this.beforeRender)) {\n                this.beforeRender();\n            }\n            const new_vnode = tovnode.toVNode(parseHTMLToDOM(this.toHTML()));\n            new_vnode.data.hook = _.extend({\n               create: this.updateEventListeners.bind(this),\n               update: this.updateEventListeners.bind(this)\n            });\n            const el = this.vnode ? this.vnode.elm : this.el;\n            if (el.outerHTML !== new_vnode.elm.outerHTML) {\n                this.vnode = patch(this.vnode || this.el, new_vnode);\n            }\n            if (_.isFunction(this.afterRender)) {\n                this.afterRender();\n            }\n            return this;\n        }\n    });\n    return Backbone.VDOMView;\n}));\n"]}